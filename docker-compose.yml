
services:
        config-server:
                container_name: config-server
                build:
                        context: ./services/config-server
                ports:
                        - "8888:8888"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - discovery-service

        discovery-service:
                container_name: discovery-service
                build:
                        context: ./services/discovery
                ports:
                        - "8761:8761"
                networks:
                        - microservices-net



        gateway-service:
                container_name: gateway-service
                build:
                        context: ./services/gateway
                ports:
                        - "8222:8222"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - config-server
                command: ["dockerize", "-wait", "http://config-server:8888/actuator/health", "-timeout", "30s", "java", "-jar", "/app/app.jar"]

        customer-service:
                container_name: customer-service
                build:
                        context: ./services/customer
                ports:
                        - "8090:8090"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - config-server

        identity-service:
                container_name: identity-service
                build:
                        context: ./services/identity-service
                ports:
                        - "9898:9898"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - config-server

        notification-service:
                container_name: notification-service
                build:
                        context: ./services/notification
                ports:
                        - "8040:8040"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - config-server

        order-service:
                container_name: order-service
                build:
                        context: ./services/order
                ports:
                        - "8070:8070"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - config-server

        payment-service:
                container_name: payment-service
                build:
                        context: ./services/payment
                ports:
                        - "8061:8061"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - config-server

        product-service:
                container_name: product-service
                build:
                        context: ./services/product
                ports:
                        - "8050:8050"
                networks:
                        - microservices-net
                environment:
                        - EUREKA_SERVER_ADDRESS=http://discovery-service:8761/eureka
                depends_on:
                        - config-server


        postgresql:
                container_name: ms_pg_sql
                image: postgres
                environment:
                        POSTGRES_USER: alibou
                        POSTGRES_PASSWORD: alibou
                        PGDATA: /data/postgres
                volumes:
                        - postgres:/data/postgres
                ports:
                        - "5432:5432"
                networks:
                        - microservices-net
                restart: unless-stopped

        pgadmin:
                container_name: ms_pgadmin
                image: dpage/pgadmin4
                environment:
                        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
                        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
                        PGADMIN_CONFIG_SERVER_MODE: 'False'
                volumes:
                        - pgadmin:/var/lib/pgadmin
                ports:
                        - "5050:80"
                networks:
                        - microservices-net
                restart: unless-stopped

        zipkin:
                container_name: zipkin
                image: openzipkin/zipkin
                ports:
                        - "9411:9411"
                networks:
                        - microservices-net

        mongodb:
                image: mongo
                container_name: mongo_db
                ports:
                        - 27017:27017
                volumes:
                        - mongo:/data
                environment:
                        - MONGO_INITDB_ROOT_USERNAME=alibou
                        - MONGO_INITDB_ROOT_PASSWORD=alibou

        mongo-express:
                image: mongo-express
                container_name: mongo_express
                restart: always
                ports:
                        - 8081:8081
                environment:
                        - ME_CONFIG_MONGODB_ADMINUSERNAME=alibou
                        - ME_CONFIG_MONGODB_ADMINPASSWORD=alibou
                        - ME_CONFIG_MONGODB_SERVER=mongodb

        zookeeper:
                image: confluentinc/cp-zookeeper:latest
                container_name: zookeeper
                environment:
                        ZOOKEEPER_SERVER_ID: 1
                        ZOOKEEPER_CLIENT_PORT: 2181
                        ZOOKEEPER_TICK_TIME: 2000
                ports:
                        - "22181:2181"
                networks:
                        - microservices-net
        kafka:
                image: confluentinc/cp-kafka:latest
                container_name: ms_kafka
                ports:
                        - "9092:9092"
                depends_on:
                        - zookeeper
                environment:
                        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
                        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
                        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
                        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
                        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
                        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ms_kafka:9092
#                        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
                networks:
                        - microservices-net

        mail-dev:
                container_name: ms-mail-dev
                image: maildev/maildev
                ports:
                        - 1080:1080
                        - 1025:1025

networks:
        microservices-net:
                external: true
                driver: bridge

volumes:
        postgres:
        pgadmin:
        mongo: